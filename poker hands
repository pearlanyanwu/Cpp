#include <iostream>
using namespace std;

// ONE PAIR
bool containsPair(int hand[]) {
    for (int i=0; i<5; i++) {
      for (int j=i+1; j<5; j++) {
        if (hand[i] == hand[j]) {
          return true;
        }
      }
    }
  return false;
}

// TWO PAIRS
bool containsTwoPair(int hand[]) {
    int twoPair = 0;
    for (int i=0; i<5; i++) {
      for (int j=i+1; j<5; j++) {
          if (hand[i] == hand[j]) {
              twoPair++;
          }
      }
    }
    if (twoPair == 2) {
        return true;
    }
    else {
        return false;
    }
}

// THREE OF A KIND
bool containsThreeOfaKind(int hand[]) {
    for (int i=0; i<5; i++) {
        int aPair = 0;

        for (int j=i+1; j<5; j++) {
            if (hand[i] == hand[j]) {
                aPair++;
            }
            if(aPair == 2) {
            return true;
            }
        }
    }
return false;
}

// FOUR OF A KIND
bool containsFourOfaKind(int hand[]) {
    for (int i=0; i<5; i++) {
        int aPair = 0;

        for (int j=i+1; j<5; j++) {
            if (hand[i] == hand[j]) {
                aPair++;
            }

                if (aPair == 3) {
                    return true;
                }
        }
   }
return false;
}

// STRAIGHT
bool containsStraight(int hand[]) {
    int lowest = hand[0];
   for (int i=1; i<5; i++) {
        if (hand[i] < lowest) {
            lowest = hand[i];
        }
    }

    int search[5];
    for (int i=0; i<5; i++) {
        search[i] = lowest+i;
    }

    int count; int searchNumber;
    for (int j=0; j<5; j++) {
        searchNumber = search[j];
        count = 0;
        for (int k=0; k<5; k++) {
            if (hand[k] == searchNumber) {
                count++;
            }
        }
        if (count != 1) {
            return false;
        }
    }
}
// FULL HOUSE
bool containsFullHouse(int hand[]) {
    int threeOfaKind = 0;
    for (int i=0; i<5; i++) {
        int aPair = 0;

        for (int j=i+1; j<5; j++) {
            if (hand[i] == hand[j]) {
                aPair++;
            }
            if (aPair == 2) {
                threeOfaKind = hand[i];
                break;
            }
        }
    }
    if (threeOfaKind == 0) {
        return false;
    }
    for (int i=0; i<5; i++) {
        for (int j=i+1; j<5; j++) {
            if (hand[i] == hand[j] && hand[i] != threeOfaKind) {
                return true;
            }
        }
    }
return false;
}

int main()
{
    int cards[5];
    cout << "enter five cards with numerical values from 2 to 9." << endl;
    cout << "card 1: ";
    cin >> cards[0];
    cout << "card 2: ";
    cin >> cards[1];
    cout << "card 3: ";
    cin >> cards[2];
    cout << "card 4: ";
    cin >> cards[3];
    cout << "card 5: ";
    cin >> cards[4];
    
    if (containsFullHouse(cards)) {
        cout << "full house!" << endl;
    }
    else if (containsStraight(cards)) {
        cout << "straight!" << endl;
    }
    else if (containsFourOfaKind(cards)) {
        cout << "four of a kind!" << endl;
    }
    else if (containsThreeOfaKind(cards)) {
        cout << "three of a kind!" << endl;
    }
    else if (containsTwoPair(cards)) {
        cout << "two Pair!" << endl;
    }
    else if (containsPair(cards)) {
        cout << "pair!" << endl;
    }
    else {
        cout << "high card!" << endl;
    }
}

#include <iostream>
#include <cstring>
using namespace std;

struct WinRecord
{
 char* name;
 int wins;
};

// read in a line of text and return it in a dynamically allocated array
char* getLine() 
{ 
 const int BUFFER_SIZE = 1000;
 // Allocate a buffer local to this function
 char buffer[BUFFER_SIZE];
 // Use cin.getline() to input the buffer from the user
 cin.getline(buffer, BUFFER_SIZE);
 // Find the length of the string in buffer
 int length = strlen(buffer);
 // Dynamically allocate an array, to be returned
 char *rValue = new char[length + 1];
 // Copy the string into the dynamically allocated array
 strncpy(rValue, buffer, length);
 // Return the address of the dynamically allocated array
 return rValue;
}

void initializeData(WinRecord* standings, int size)
{
 for (int i = 0; i < size; i++) {
  cout << "name of team #" << i+1 << ": ";
  cin.ignore();
  standings[i].name = getLine();
  cin >> standings[i].name;
  cout << "score of team #" << i+1 << ": ";
  cin >> standings[i].wins;
 }
}

void sortData(WinRecord* standings, int size)
{
 WinRecord temp;
 
 for (int i = 0; i < size; i++) {
  for (int j = i+1; j < size; j++) {
   if (standings[j].wins > standings[i].wins) {
    temp = standings[i];
    standings[i] = standings[j];
    standings[j] = temp;
   }
  }
 }
}

void displayData(WinRecord* standings, int size)
{
 cout << endl;
 cout << "LEAGUE STANDINGS:" << endl;
 for (int i = 0; i < size; i++) {
  cout << standings[i].name << ": " << standings[i].wins << endl;
 }
}

int main()
{
 int size;
 cout << "Number of teams: ";
 cin >> size;
 
 WinRecord *ptr = new WinRecord[size];
 
 initializeData(ptr, size);
 sortData(ptr, size);
 displayData(ptr, size);

 for (int i = 0; i < size; i++) {
  delete [] ptr[i].name;
  ptr[i].name = NULL;
 }
 
delete [] ptr;
ptr = NULL;
}
